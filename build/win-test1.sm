	.file	win-test1.sm
	.comment
**	Simple Compilation Compiler Code
**	File standard infomation comment
**	END of comment prelude.
	.code
001	MOV	$0,	%eax
002	LOD	%eip
003	MOV	$0,	%ebp
004	MOV	$6,	%esp
**	-> assign
005	MOV	$9,	%eax
006	MOV	%eax,	%ebx
007	MOV	$4,	%eax
008	ADD	%ebx,	%eax
009	MOV	%eax,	%ebp
**	store assign result to num
**	<- assign
010	MOV	$0,	%eax
**	-> assign
011	MOV	%ebp,	%eax
012	MOV	%eax,	%ecx
013	MOV	%ebp,	%eax
014	MUL	%ecx,	%eax
015	MOV	%eax,	1(%ebp)
**	store assign result to a
**	<- assign
016	MOV	$0,	%eax
**	-> assign
017	MOV	$1,	%eax
018	MOV	%eax,	%ebx
019	MOV	1(%ebp),	%eax
020	MOV	%eax,	%ebx
021	MOV	%ebp,	%eax
022	ADD	%ebx,	%eax
023	ADD	%ebx,	%eax
024	MOV	%eax,	2(%ebp)
**	store assign result to c
**	<- assign
025	MOV	$0,	%eax
**	-> assign
026	MOV	$1,	%eax
027	MOV	%eax,	3(%ebp)
**	store assign result to d
**	<- assign
028	MOV	$0,	%eax
**	-> operator
029	MOV	2(%ebp),	%eax
030	MOV	3(%ebp),	%ebx
031	MUL	%ebx,	%eax
032	SUB	%eax,	%ebx
033	MOV	%ebx,	3(%ebp)
**	<- operator
034	MOV	$0,	%eax
**	-> operator
035	MOV	%ebp,	%eax
036	MOV	3(%ebp),	%ebx
037	MOV	%ebx,	%ecx
038	DIV	%eax,	%ecx
039	ADD	%ecx,	%ebx
040	MOV	%ebx,	3(%ebp)
**	<- operator
041	MOV	$0,	%eax
**	-> output
042	MOV	1(%ebp),	%eax
043	MOV	%eax,	%esp
044	CALL	OUT
**	<- output
045	MOV	$0,	%eax
**	-> output
046	MOV	2(%ebp),	%eax
047	MOV	%eax,	%esp
048	CALL	OUT
**	<- output
049	MOV	$0,	%eax
**	-> output
050	MOV	3(%ebp),	%eax
051	MOV	%eax,	%esp
052	CALL	OUT
**	<- output
053	MOV	$0,	%eax
054	RET
055	HALT	$0,	$0
**	END of File comment
